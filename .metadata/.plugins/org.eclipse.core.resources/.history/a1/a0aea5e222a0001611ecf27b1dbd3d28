package com.it.test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

class OutThread extends Thread {
	Socket socket;
	String str;

	public OutThread(Socket socket, String str) {
		super();
		this.socket = socket;
		this.str = str;
	}

	@Override
	public void run() {
		OutputStream os = null;
		try {
			os = socket.getOutputStream();
		} catch (IOException e) {
			e.printStackTrace();
		}
		PrintStream ps = new PrintStream(os);
		ps.println(str);
	}
}

class InThread extends Thread {
	Socket socket;

	public InThread(Socket socket) {
		super();
		this.socket = socket;
	}

	@Override
	public void run() {
		InputStream is = null;
		try {
			is = socket.getInputStream();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		InputStreamReader isr = new InputStreamReader(is);
		BufferedReader br = new BufferedReader(isr);
		try {
			System.out.println(br.readLine());
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}

public class Server {
	public static void main(String[] args) throws IOException {
		ServerSocket server = new ServerSocket(8888);
		System.out.println("我是服务端");
		Socket severSocket = server.accept();

		Scanner sc = new Scanner(System.in);
		while (true) {
			String str = sc.nextLine();
			Thread t1 = new InThread(severSocket);
			Thread t2 = new OutThread(severSocket, str);
			t1.start();
			t2.start();
			if (str.equals(0)) {
				break;
			}
		}
		sc.close();
		server.close();

	}
}
